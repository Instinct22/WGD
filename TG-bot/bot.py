import os
import telebot
from telebot import types
from create_and_rename_wg_users_static import AddWgUser
from dotenv import load_dotenv


load_dotenv()

class TelegramBot:
    def __init__(self, token):
        self.bot = telebot.TeleBot(token)
        # ID –∫–∞–Ω–∞–ª–∞, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø–æ–¥–ø–∏—Å–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
        self.channel_id = os.getenv("CHANNEL_ID")
        self.register_handlers()

        self.channel_info = self.bot.get_chat(self.channel_id)
        self.channel_name = self.channel_info.title
        self.channel_link = []

        self.photo_files = []
        self.image_path = []
        self.media = []
        self.file_handles = []
        self.caption = []

    """ –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ"""
    def greeting(self, chat_id):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è")
        markup.add(btn1)
        self.bot.send_message(chat_id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—à–Ω–∏–∫!", reply_markup=markup)

    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    def show_main_menu(self, chat_id):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VPN")
        btn2 = types.KeyboardButton("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
        btn3 = types.KeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏")
        btn4 = types.KeyboardButton("–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞")
        markup.add(btn1)
        markup.add(btn2)
        markup.add(btn3)
        markup.add(btn4)
    
        self.bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

    """–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    def create_user(self, chat_id):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ü–ö")
        btn2 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
        # btn3 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ü–ö –∏ —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
        btn4 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1)
        markup.add(btn2)
        markup.add(btn4)
        self.bot.send_message(chat_id, "–ö–∞–∫—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å:", reply_markup=markup)

    """–ü–æ—Ç–µ—Ä—è–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    def lost_configuration(self, chat_id):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–î–∞")
        btn2 = types.KeyboardButton("–ù–µ—Ç")
        markup.add(btn1, btn2)
        self.bot.send_message(chat_id, "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é?", reply_markup=markup)

    """–ü–æ—Ç–µ—Ä—è–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    def configuration_selection(self, chat_id):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ –ü–ö")
        btn2 = types.KeyboardButton("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω")
        markup.add(btn1, btn2)
        self.bot.send_message(chat_id, "–ö–∞–∫—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∂–µ–ª–∞–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å?", reply_markup=markup)

    """ –í—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"""
    def select_configuration(self, chat_id):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è PC")
        btn2 = types.KeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞")
        btn3 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1)
        markup.add(btn2)
        markup.add(btn3)
        self.bot.send_message(chat_id, "–ö–∞–∫–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º –≤—ã –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å?", reply_markup=markup)


    """ –í—ã–±–æ—Ä –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞"""
    def select_mobile_configuration(self, chat_id):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è IPhone")
        btn2 = types.KeyboardButton("–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android")
        btn3 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1)
        markup.add(btn2)
        markup.add(btn3)
        self.bot.send_message(chat_id, "–ö–∞–∫–∏–º —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º –≤—ã –ø–æ–ª—å–∑—É–µ—Ç–µ—Å—å?", reply_markup=markup)


    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª"""
    def check_subscription(self, user_id):
        try:
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–ø–∏—Å–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            member_info = self.bot.get_chat_member(self.channel_id, user_id)
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ–¥–ø–∏—Å–∫–∏
            if member_info.status in ['member', 'administrator', 'creator']:
                return True
            return False
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–æ–¥–ø–∏—Å–∫–∏: {e}")
            return False

    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–ø–∏—Å–∫–∏"""
    def show_subscription_message(self, chat_id):
        markup = types.InlineKeyboardMarkup()
        self.channel_link = self.channel_info.invite_link

        btn = types.InlineKeyboardButton(text=f"–ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ {self.channel_name}", url=self.channel_link)
        markup.add(btn)
        
        btn_check = types.InlineKeyboardButton(text="–Ø –ø–æ–¥–ø–∏—Å–∞–ª—Å—è ‚úÖ", callback_data="check_subscription")
        markup.add(btn_check)
        
        self.bot.send_message(
            chat_id,
            f"‚ö†Ô∏è –î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—É –±–æ—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª {self.channel_name}.",
            reply_markup=markup
        )

    def show_support_chat(self, chat_id):
        self.channel_link = self.channel_info.invite_link
        link = types.InlineKeyboardMarkup()
        btn = types.InlineKeyboardButton(text="–ß–∞—Ç —Ç–µ—Ö-–ø–æ–¥–¥–µ—Ä–∂–∫–∏", url=self.channel_link)
        link.add(btn)
        self.bot.send_message(chat_id, "–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ —á–∞—Ç —Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∏:", reply_markup=link)

    def register_handlers(self):
        @self.bot.message_handler(commands=['start'])
        def start(message):
            self.greeting(message.chat.id)
            
        @self.bot.callback_query_handler(func=lambda call: call.data == "check_subscription")
        def callback_check(call):
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–ø–∏—Å–∞–ª—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            if self.check_subscription(call.from_user.id):
                self.bot.answer_callback_query(call.id, "–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É! –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º.")
                self.bot.delete_message(call.message.chat.id, call.message.message_id)
                self.show_main_menu(call.message.chat.id)
            else:
                self.bot.answer_callback_query(call.id, "–í—ã –≤—Å–µ –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –∫–∞–Ω–∞–ª.", show_alert=True)

        @self.bot.message_handler(content_types=['text'])
        def handle_text(message):
            if message.text == 'üëã –ü–æ–∑–¥–æ—Ä–æ–≤–∞—Ç—å—Å—è':
                # –ü–æ—Å–ª–µ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –∫–∞–Ω–∞–ª
                if self.check_subscription(message.from_user.id):
                    self.show_main_menu(message.chat.id)
                else:
                    self.show_subscription_message(message.chat.id)
                return

            # –î–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –ø—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
            if not self.check_subscription(message.from_user.id):
                self.show_subscription_message(message.chat.id)
                return

            if message.text in ["–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è IPhone", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è PC"]:
                if message.text == "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è IPhone":
                    self.photo_files = ['1.png', '2.png', '3.png', '4.png', '5.png', '6.png', '7.png', '8.png']
                    self.image_path = 'image/IPhone'
                    self.caption = """ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è IPhoneüì±:

- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º WireGuard —Å AppStore ‚òëÔ∏è
- –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –ë–æ—Ç–∞ –∏ —Å–∫–∞—á–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ —É–¥–æ–±–Ω–æ–µ –º–µ—Å—Ç–æ üéá
- –ù–∞–∂–∏–º–∞–µ–º "–î–æ–±–∞–≤–∏—Ç—å —Ç—É–Ω–Ω–µ–ª—å" üîß
- –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ "–°–æ–∑–¥–∞—Ç—å –∏–∑ —Ñ–∞–π–ª–∞ –∏–ª–∏ –∞—Ä—Ö–∏–≤–∞" ü™Ω
- –û—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞, —Å–º–µ–ª–æ –≤—ã–±–µ—Ä–µ–º –Ω—É–∂–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.üõ∏
- –û—Ç–ª–∏—á–Ω–æ. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ü–æ–¥–∫–ª—é—á–∏—Ç—å" –Ω–∞–ø—Ä–æ—Ç–∏–≤ —Å–≤–æ–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏üõú
- –í—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã!üçæ"""

                    self.import_image(message)

                elif message.text == "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Android":
                    self.photo_files = ['1.png', '2.png', '3.png', '4.png', '5.png', '6.png', '7.png']
                    self.image_path = 'image/Android'
                    self.caption = """ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è Androidüì±:

- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º WireGuard —Å GooglePlay ‚òëÔ∏è
- –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –ë–æ—Ç–∞ –∏ —Å–∫–∞—á–∏–≤–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ —É–¥–æ–±–Ω–æ–µ –º–µ—Å—Ç–æ üéá
- –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞üîß
- –í—ã–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é —Å–∫–∞—á–∞–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Å–ø–∏—Å–∫–∞ —Ñ–∞–π–ª–æ–≤ü™Ω
- –û—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è, —Å–º–µ–ª–æ –∂–º–µ–º "–û–ö".üõ∏
- –û—Ç–ª–∏—á–Ω–æ. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ü–æ–¥–∫–ª—é—á–∏—Ç—å" –Ω–∞–ø—Ä–æ—Ç–∏–≤ —Å–≤–æ–µ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏üõú
- –í—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã!üçæ"""


                    self.import_image(message)
                    self.bot.send_message(message.chat.id,
""" –í–ê–ñ–ù–û‚ùó‚ùó‚ùó –ï—Å–ª–∏ –≤–∏–¥–∏—Ç–µ –æ—à–∏–±–∫—É "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç—É–Ω–Ω–µ–ª—å":
- –ü–µ—Ä–µ–∏–º–µ–Ω—É–π—Ç–µ —Ñ–∞–π–ª, —É–¥–∞–ª–∏–≤ "_Mob" –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
- –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è - –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É""")

                elif message.text == "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è PC":
                    self.photo_files = ['1.png', '2.png', '3.png', '4.png', '5.png']
                    self.image_path = 'image/PC'
                    self.caption = """ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ü–öüñ•:

- –ö–∞—á–∞–µ–º WireGuard —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –∏–ª–∏ –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –Ω–∞ –ø—Ä—è–º—É—é –ø–æ ‚áí [–°–°–´–õ–ö–ï](https://download.wireguard.com/windows-client/wireguard-installer.exe) ‚áê
- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ü´°
- –ó–∞–ø—É—Å–∫–∞–µ–ºüí°
- –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤ –Ω—ë–º –Ω–µ—Ç –Ω–∏ –∫–∞–∫–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π.üß∂
- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∫–∞—á–∞–ª–∏ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–æ —Å–≤–æ–∏–º ID ü´µ
- –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ "–ò–º–ø–æ—Ä—Ç —Ç—É–Ω–Ω–µ–ª–µ–π" –∏–ª–∏ "–î–æ–±–∞–≤–∏—Ç—å —Ç—É–Ω–Ω–µ–ª—å", –∫–Ω–æ–ø–∫–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç –æ–¥–Ω—É —Ñ—É–Ω–∫—Ü–∏—é, —Ç–∞–∫ —á—Ç–æ –≤—ã–±–µ—Ä–µ–º –ª—é–±—É—é ü™Ω
- –û—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞, —Å–º–µ–ª–æ –≤—ã–±–µ—Ä–µ–º –Ω—É–∂–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.üéá
- –û—Ç–ª–∏—á–Ω–æ. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ü–æ–¥–∫–ª—é—á–∏—Ç—å"üõú
- –í—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã!üçæ"""

                    self.import_image(message)

                    return




            if message.text == '–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ü–ö' or message.text == '–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞':

                if message.text == '–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ü–ö':
                    user_id = message.from_user.id
                else:
                    user_id = f"{message.from_user.id}_Mob"
                add_user = AddWgUser(name_user=user_id)

                if str(user_id) in add_user.check_client_configuration():
                    self.bot.send_message(message.chat.id, "‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è!")
                    return

                add_user.create_wg_users()
                add_user.parse_peer_name()
                add_user.reconfig_peer()

                config_file = add_user.download_peer_config()

                if config_file:
                    with open(config_file, 'rb') as file:
                        self.bot.send_document(
                            chat_id=message.chat.id,
                            document=file,
                            caption="–í–∞—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WireGuard üöÄ"
                        )
                        
                    try:
                        os.remove(config_file)
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {config_file}: {e}")

                    try:
                        if message.text == '–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ü–ö':
                            self.photo_files = ['1.png', '2.png', '3.png', '4.png', '5.png']
                            self.image_path = 'image/PC'
                            self.caption = """ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ü–öüñ•:

- –ö–∞—á–∞–µ–º WireGuard —Å –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ —Å–∞–π—Ç–∞ –∏–ª–∏ –º–æ–∂–µ—Ç–µ —Å–∫–∞—á–∞—Ç—å –Ω–∞ –ø—Ä—è–º—É—é –ø–æ ‚áí [–°–°–´–õ–ö–ï](https://download.wireguard.com/windows-client/wireguard-installer.exe) ‚áê
- –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ü´°
- –ó–∞–ø—É—Å–∫–∞–µ–ºüí°
- –ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –≤ –Ω—ë–º –Ω–µ—Ç –Ω–∏ –∫–∞–∫–∏—Ö –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π.üß∂
- –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–∫–∞—á–∞–ª–∏ —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å–æ–∑–¥–∞–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é —Å–æ —Å–≤–æ–∏–º ID ü´µ
- –ù–∞–∂–∏–º–∞–µ–º –Ω–∞ "–ò–º–ø–æ—Ä—Ç —Ç—É–Ω–Ω–µ–ª–µ–π" –∏–ª–∏ "–î–æ–±–∞–≤–∏—Ç—å —Ç—É–Ω–Ω–µ–ª—å", –∫–Ω–æ–ø–∫–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç –æ–¥–Ω—É —Ñ—É–Ω–∫—Ü–∏—é, —Ç–∞–∫ —á—Ç–æ –≤—ã–±–µ—Ä–µ–º –ª—é–±—É—é ü™Ω
- –û—Ç–∫—Ä–æ–µ—Ç—Å—è –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞, —Å–º–µ–ª–æ –≤—ã–±–µ—Ä–µ–º –Ω—É–∂–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.üéá
- –û—Ç–ª–∏—á–Ω–æ. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! —Ç–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –Ω–∞–∂–∞—Ç—å –∫–Ω–æ–ø–∫—É "–ü–æ–¥–∫–ª—é—á–∏—Ç—å"üõú
- –í—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω—ã!üçæ"""

                            self.import_image(message)

                        elif message.text == '–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞':
                            self.select_mobile_configuration(message.chat.id)

                    except Exception as photo_error:
                        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: {photo_error}")
                        self.bot.send_message(
                            chat_id=message.chat.id,
                            text=f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é, –Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ. –ù–∞–ø–∏—à–∏—Ç–µ –æ–± —ç—Ç–æ–π –ø—Ä–æ–±–ª–µ–º–µ –≤ —á–∞—Ç –≥—Ä—É–ø–ø—ã: {self.channel_link}"

                        )

                else:
                    self.bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!")

            elif message.text == '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ –ü–ö' or message.text == '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ –ú–æ–±–∏–ª—å–Ω—ã–π':
                user_id = message.from_user.id
                self.show_main_menu(message.chat.id)

            elif message.text == '–î–∞':
                self.configuration_selection(message.chat.id)

            elif message.text == '–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VPN':
                self.create_user(message.chat.id)

            elif message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' or message.text == '–ù–µ—Ç':
                self.show_main_menu(message.chat.id)

            elif message.text == '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é':
                self.lost_configuration(message.chat.id)

            elif message.text == '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏':
                self.select_configuration(message.chat.id)

            elif message.text == '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è —Ç–µ–ª–µ—Ñ–æ–Ω–∞':
                self.select_mobile_configuration(message.chat.id)

            elif message.text == '–¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞':
                self.show_support_chat(message.chat.id)


    # –§—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç–∞–≤–∫–∏ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ (–ê–ª—å–±–æ–º –∏–∑–æ–æ–±—Ä–∞–∂–µ–Ω–∏–π + —Ç–µ–∫—Å—Ç –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏)
    def import_image(self, message):
        self.media = []
        self.file_handles = []

        try:
            for i, file_name in enumerate(self.photo_files):
                photo_path = os.path.join(self.image_path, file_name)
                try:
                    file = open(photo_path, 'rb')
                    self.file_handles.append(file)
                    if i == 0:
                        self.media.append(types.InputMediaPhoto(
                            media=file,
                            caption=self.caption,
                            parse_mode="Markdown"
                        ))
                    else:
                        self.media.append(types.InputMediaPhoto(file))

                except FileNotFoundError:
                    print(f"–§–∞–π–ª {photo_path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
                    continue

            if self.media:
                self.bot.send_media_group(
                    chat_id=message.chat.id,
                    media=self.media
                )

            else:
                self.bot.send_message(
                    chat_id=message.chat.id,
                    text="–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
                )

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –º–µ–¥–∏–∞–≥—Ä—É–ø–ø—ã: {e}")
            self.bot.send_message(
                chat_id=message.chat.id,
                text="‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏"
            )

        finally:
            for file in self.file_handles:
                try:
                    file.close()
                except:
                    pass

    def run(self):
        self.bot.polling(none_stop=True, interval=1, skip_pending=True)

if __name__ == "__main__":
    bot = TelegramBot(os.getenv("TELEGRAM_BOT_TOKEN"))
    bot.run()