import os
import telebot
from telebot import types
from create_and_rename_wg_users_static import AddWgUser
from dotenv import load_dotenv

load_dotenv()

class TelegramBot:
    def __init__(self, token):
        self.bot = telebot.TeleBot(token)
        self.register_handlers()

    """–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    def show_main_menu(self, chat_id):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VPN")
        btn2 = types.KeyboardButton("–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é (–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)")
        markup.add(btn1)
        markup.add(btn2)
        self.bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)

    """–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    def create_user(self, chat_id):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ü–ö")
        btn2 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ú–æ–±–∏–ª—å–Ω–∏–∫–∞")
        # btn3 = types.KeyboardButton("–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ü–ö –∏ –ú–æ–±–∏–ª—å–Ω–∏–∫–∞")
        btn4 = types.KeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é")
        markup.add(btn1)
        markup.add(btn2)
        markup.add(btn4)
        self.bot.send_message(chat_id, "–ö–∞–∫—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤—ã –∂–µ–ª–∞–µ—Ç–µ —Å–æ–∑–¥–∞—Ç—å:", reply_markup=markup)

    """–ü–æ—Ç–µ—Ä—è–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"""
    def lost_configuration(self, chat_id):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–î–∞")
        btn2 = types.KeyboardButton("–ù–µ—Ç")
        markup.add(btn1, btn2)
        self.bot.send_message(chat_id, "–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é?", reply_markup=markup)

    def configuration_selection(self, chat_id):
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ –ü–ö")
        btn2 = types.KeyboardButton("–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ –ú–æ–±–∏–ª—å–Ω—ã–π")
        markup.add(btn1, btn2)
        self.bot.send_message(chat_id, "–ö–∞–∫—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∂–µ–ª–∞–µ—Ç–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å?", reply_markup=markup)

    def register_handlers(self):
        @self.bot.message_handler(commands=['start'])
        def start(message):
            self.show_main_menu(message.chat.id)

        @self.bot.message_handler(content_types=['text'])
        def handle_text(message):

            """–ù–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–µ—Ä–µ—Ä–∞–±–æ—Ç–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é '–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ü–ö' –∏ '–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ú–æ–±–∏–ª—å–Ω–∏–∫–∞'. –¢–∞–∫, —á—Ç–æ–± –ø—Ä–æ–≤–µ—Ä–∫–∞ –±—ã–ª–∞ –≤ —É—Å–ª–æ–≤–∏–∏,–∞ –Ω–µ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ check_client_configuration"""

            if message.text == '–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ü–ö':
                user_id = message.from_user.id
                add_user = AddWgUser(name_user=user_id)

                if not add_user.check_client_configuration():
                    self.bot.send_message(message.chat.id, "‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è!")
                    return

                add_user.create_wg_users()
                add_user.parse_peer_name()
                add_user.reconfig_peer()

                config_file = add_user.download_peer_config()

                if config_file:
                    with open(config_file, 'rb') as file:
                        self.bot.send_document(
                            chat_id=message.chat.id,
                            document=file,
                            caption="–í–∞—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WireGuard üöÄ"
                        )
                else:
                    self.bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!")



            elif message.text == '–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –ú–æ–±–∏–ª—å–Ω–∏–∫–∞':
                user_id = message.from_user.id
                add_user = AddWgUser(name_user=f'{user_id}_mobile')

                if not add_user.check_client_configuration():
                    self.bot.send_message(message.chat.id, "‚ö†Ô∏è –£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è!")
                    return

                add_user.create_wg_users()
                add_user.parse_peer_name()
                add_user.reconfig_peer()

                config_file = add_user.download_peer_config()

                if config_file:
                    with open(config_file, 'rb') as file:
                        self.bot.send_document(
                            chat_id=message.chat.id,
                            document=file,
                            caption="–í–∞—à–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è WireGuard üöÄ"
                        )
                else:
                    self.bot.send_message(message.chat.id, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏!")



            elif message.text == '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ –ü–ö' or message.text == '–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–∞ –ú–æ–±–∏–ª—å–Ω—ã–π':
                user_id = message.from_user.id
                self.show_main_menu(message.chat.id)





            elif message.text == '–î–∞':
                self.configuration_selection(message.chat.id)

            elif message.text == '–°–æ–∑–¥–∞—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é VPN':
                self.create_user(message.chat.id)

            elif message.text == '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é' or message.text == '–ù–µ—Ç':
                self.show_main_menu(message.chat.id)

            elif message.text == '–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é':
                self.lost_configuration(message.chat.id)







    def run(self):
        self.bot.polling(none_stop=True, interval=1, skip_pending=True)

if __name__ == "__main__":
    bot = TelegramBot(os.getenv("TELEGRAM_BOT_TOKEN"))
    bot.run()